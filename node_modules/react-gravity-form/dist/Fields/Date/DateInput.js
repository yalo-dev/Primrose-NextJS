"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _react=_interopRequireDefault(require("react")),_ValidationMessage=_interopRequireDefault(require("../../FormElements/ValidationMessage")),_default=function(a){var b=a.defaultProps,c=b.field,d=b.validationMessage,e=b.touched,f=b.setTouched,g=b.updateForm,h=b.formattedInputs,i=b.error,j=b.unsetError,k=b.setFocusClass,l=b.styledComponents,m=c.id,n=c.formId,o=c.type,p=c.customName,q=(l||!1).Input,r=void 0===q?"input":q;return _react["default"].createElement(_react["default"].Fragment,null,h&&h.map(function(a,b){return _react["default"].createElement("div",{className:o,key:a.id},_react["default"].createElement(r,{id:"input_".concat(n,"_").concat(m,"_").concat(b),type:"number",name:p||"input_".concat(m,"[]"),placeholder:a.placeholder,step:"1",min:"1",max:"MM"===a.label?12:"DD"===a.label?31:new Date().getFullYear()+1,maxLength:"YYYY"===a.label?4:2,value:a.value,onBlur:function onBlur(d){c.subId=b,c.dateLabel=a.label,g(d,c),f(m),j(m),k(""!==a.value)},onFocus:function onFocus(){return k(!0)}}),_react["default"].createElement("label",{htmlFor:"input_".concat(n,"_").concat(m,"_").concat(b),className:"hide-label"},a.label),d&&e&&d[b]&&b===d[b].index&&d[b].message&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(n,"_").concat(a.id)},d[b].message),i&&_react["default"].createElement("span",{className:"error-message"},i))}))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9GaWVsZHMvRGF0ZS9EYXRlSW5wdXQuanN4Il0sIm5hbWVzIjpbImRlZmF1bHRQcm9wcyIsImZpZWxkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJ0b3VjaGVkIiwic2V0VG91Y2hlZCIsInVwZGF0ZUZvcm0iLCJmb3JtYXR0ZWRJbnB1dHMiLCJlcnJvciIsInVuc2V0RXJyb3IiLCJzZXRGb2N1c0NsYXNzIiwic3R5bGVkQ29tcG9uZW50cyIsImlkIiwiZm9ybUlkIiwidHlwZSIsImN1c3RvbU5hbWUiLCJJbnB1dCIsIm1hcCIsIml0ZW0iLCJpbmRleCIsInBsYWNlaG9sZGVyIiwibGFiZWwiLCJEYXRlIiwiZ2V0RnVsbFllYXIiLCJ2YWx1ZSIsImV2ZW50Iiwic3ViSWQiLCJkYXRlTGFiZWwiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoieVVBR2UsV0FBc0IsSUFBbkJBLENBQUFBLENBQW1CLEdBQW5CQSxZQUFtQixDQUVqQ0MsQ0FGaUMsQ0FZL0JELENBWitCLENBRWpDQyxLQUZpQyxDQUdqQ0MsQ0FIaUMsQ0FZL0JGLENBWitCLENBR2pDRSxpQkFIaUMsQ0FJakNDLENBSmlDLENBWS9CSCxDQVorQixDQUlqQ0csT0FKaUMsQ0FLakNDLENBTGlDLENBWS9CSixDQVorQixDQUtqQ0ksVUFMaUMsQ0FNakNDLENBTmlDLENBWS9CTCxDQVorQixDQU1qQ0ssVUFOaUMsQ0FPakNDLENBUGlDLENBWS9CTixDQVorQixDQU9qQ00sZUFQaUMsQ0FRakNDLENBUmlDLENBWS9CUCxDQVorQixDQVFqQ08sS0FSaUMsQ0FTakNDLENBVGlDLENBWS9CUixDQVorQixDQVNqQ1EsVUFUaUMsQ0FVakNDLENBVmlDLENBWS9CVCxDQVorQixDQVVqQ1MsYUFWaUMsQ0FXakNDLENBWGlDLENBWS9CVixDQVorQixDQVdqQ1UsZ0JBWGlDLENBY2pDQyxDQWRpQyxDQWUvQlYsQ0FmK0IsQ0FjakNVLEVBZGlDLENBYzdCQyxDQWQ2QixDQWUvQlgsQ0FmK0IsQ0FjN0JXLE1BZDZCLENBY3JCQyxDQWRxQixDQWUvQlosQ0FmK0IsQ0FjckJZLElBZHFCLENBY2ZDLENBZGUsQ0FlL0JiLENBZitCLENBY2ZhLFVBZGUsSUFpQlBKLENBQWdCLElBakJULEVBaUIzQkssS0FqQjJCLENBaUIzQkEsQ0FqQjJCLFlBaUJuQixPQWpCbUIsR0FtQm5DLE1BQ0UsaUVBQ0dULENBQWUsRUFDYkEsQ0FBZSxDQUFDVSxHQUFoQixDQUFvQixTQUFDQyxDQUFELENBQU9DLENBQVAsUUFDckIsd0NBQUssU0FBUyxDQUFFTCxDQUFoQixDQUFzQixHQUFHLENBQUVJLENBQUksQ0FBQ04sRUFBaEMsRUFDRSxnQ0FBQyxDQUFELEVBQ0UsRUFBRSxpQkFBV0MsQ0FBWCxhQUFxQkQsQ0FBckIsYUFBMkJPLENBQTNCLENBREosQ0FFRSxJQUFJLENBQUMsUUFGUCxDQUdFLElBQUksQ0FBRUosQ0FBVSxrQkFBYUgsQ0FBYixNQUhsQixDQUlFLFdBQVcsQ0FBRU0sQ0FBSSxDQUFDRSxXQUpwQixDQUtFLElBQUksQ0FBQyxHQUxQLENBTUUsR0FBRyxDQUFDLEdBTk4sQ0FPRSxHQUFHLENBQ2MsSUFBZixHQUFBRixDQUFJLENBQUNHLEtBQUwsQ0FDSSxFQURKLENBRW1CLElBQWYsR0FBQUgsQ0FBSSxDQUFDRyxLQUFMLENBQ0UsRUFERixDQUVFLEdBQUlDLENBQUFBLElBQUosR0FBV0MsV0FBWCxHQUEyQixDQVpyQyxDQWNFLFNBQVMsQ0FBaUIsTUFBZixHQUFBTCxDQUFJLENBQUNHLEtBQUwsQ0FBd0IsQ0FBeEIsQ0FBNEIsQ0FkekMsQ0FlRSxLQUFLLENBQUVILENBQUksQ0FBQ00sS0FmZCxDQWdCRSxNQUFNLENBQUUsZ0JBQUNDLENBQUQsQ0FBVyxDQUNqQnZCLENBQUssQ0FBQ3dCLEtBQU4sQ0FBY1AsQ0FERyxDQUVqQmpCLENBQUssQ0FBQ3lCLFNBQU4sQ0FBa0JULENBQUksQ0FBQ0csS0FGTixDQUdqQmYsQ0FBVSxDQUFDbUIsQ0FBRCxDQUFRdkIsQ0FBUixDQUhPLENBSWpCRyxDQUFVLENBQUNPLENBQUQsQ0FKTyxDQUtqQkgsQ0FBVSxDQUFDRyxDQUFELENBTE8sQ0FNakJGLENBQWEsQ0FBZ0IsRUFBZixHQUFBUSxDQUFJLENBQUNNLEtBQU4sQ0FDZCxDQXZCSCxDQXdCRSxPQUFPLENBQUUseUJBQU1kLENBQUFBLENBQWEsSUFBbkIsQ0F4QlgsRUFERixDQTJCRSx5Q0FDRSxPQUFPLGlCQUFXRyxDQUFYLGFBQXFCRCxDQUFyQixhQUEyQk8sQ0FBM0IsQ0FEVCxDQUVFLFNBQVMsQ0FBQyxZQUZaLEVBSUdELENBQUksQ0FBQ0csS0FKUixDQTNCRixDQWlDR2xCLENBQWlCLEVBQ2xCQyxDQURDLEVBRURELENBQWlCLENBQUNnQixDQUFELENBRmhCLEVBR0RBLENBQUssR0FBS2hCLENBQWlCLENBQUNnQixDQUFELENBQWpCLENBQXlCQSxLQUhsQyxFQUlEaEIsQ0FBaUIsQ0FBQ2dCLENBQUQsQ0FBakIsQ0FBeUJTLE9BSnhCLEVBS0Msd0NBQ0UsU0FBUyxDQUFDLGVBRFosQ0FFRSxFQUFFLGlCQUFXZixDQUFYLGFBQXFCSyxDQUFJLENBQUNOLEVBQTFCLENBRkosRUFJYVQsQ0FBaUIsQ0FBQ2dCLENBQUQsQ0FBakIsQ0FBeUJTLE9BSnRDLENBdENKLENBNkNHcEIsQ0FBSyxFQUFJLHdDQUFNLFNBQVMsQ0FBQyxlQUFoQixFQUFpQ0EsQ0FBakMsQ0E3Q1osQ0FEcUIsQ0FBcEIsQ0FGTCxDQXFESCxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBWYWxpZGF0aW9uTWVzc2FnZSBmcm9tICcuLi8uLi9Gb3JtRWxlbWVudHMvVmFsaWRhdGlvbk1lc3NhZ2UnO1xuXG5leHBvcnQgZGVmYXVsdCAoeyBkZWZhdWx0UHJvcHMgfSkgPT4ge1xuICBjb25zdCB7XG4gICAgZmllbGQsXG4gICAgdmFsaWRhdGlvbk1lc3NhZ2UsXG4gICAgdG91Y2hlZCxcbiAgICBzZXRUb3VjaGVkLFxuICAgIHVwZGF0ZUZvcm0sXG4gICAgZm9ybWF0dGVkSW5wdXRzLFxuICAgIGVycm9yLFxuICAgIHVuc2V0RXJyb3IsXG4gICAgc2V0Rm9jdXNDbGFzcyxcbiAgICBzdHlsZWRDb21wb25lbnRzLFxuICB9ID0gZGVmYXVsdFByb3BzO1xuICBjb25zdCB7XG4gICAgaWQsIGZvcm1JZCwgdHlwZSwgY3VzdG9tTmFtZSxcbiAgfSA9IGZpZWxkO1xuXG4gIGNvbnN0IHsgSW5wdXQgPSAnaW5wdXQnIH0gPSBzdHlsZWRDb21wb25lbnRzIHx8IGZhbHNlO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHtmb3JtYXR0ZWRJbnB1dHNcbiAgICAgICYmIGZvcm1hdHRlZElucHV0cy5tYXAoKGl0ZW0sIGluZGV4KSA9PiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXt0eXBlfSBrZXk9e2l0ZW0uaWR9PlxuICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgaWQ9e2BpbnB1dF8ke2Zvcm1JZH1fJHtpZH1fJHtpbmRleH1gfVxuICAgICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgICBuYW1lPXtjdXN0b21OYW1lIHx8IGBpbnB1dF8ke2lkfVtdYH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyPXtpdGVtLnBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgc3RlcD1cIjFcIlxuICAgICAgICAgICAgbWluPVwiMVwiXG4gICAgICAgICAgICBtYXg9e1xuICAgICAgICAgICAgICBpdGVtLmxhYmVsID09PSAnTU0nXG4gICAgICAgICAgICAgICAgPyAxMlxuICAgICAgICAgICAgICAgIDogaXRlbS5sYWJlbCA9PT0gJ0REJ1xuICAgICAgICAgICAgICAgICAgPyAzMVxuICAgICAgICAgICAgICAgICAgOiBuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCkgKyAxXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtYXhMZW5ndGg9e2l0ZW0ubGFiZWwgPT09ICdZWVlZJyA/IDQgOiAyfVxuICAgICAgICAgICAgdmFsdWU9e2l0ZW0udmFsdWV9XG4gICAgICAgICAgICBvbkJsdXI9eyhldmVudCkgPT4ge1xuICAgICAgICAgICAgICBmaWVsZC5zdWJJZCA9IGluZGV4O1xuICAgICAgICAgICAgICBmaWVsZC5kYXRlTGFiZWwgPSBpdGVtLmxhYmVsO1xuICAgICAgICAgICAgICB1cGRhdGVGb3JtKGV2ZW50LCBmaWVsZCk7XG4gICAgICAgICAgICAgIHNldFRvdWNoZWQoaWQpO1xuICAgICAgICAgICAgICB1bnNldEVycm9yKGlkKTtcbiAgICAgICAgICAgICAgc2V0Rm9jdXNDbGFzcyhpdGVtLnZhbHVlICE9PSAnJyk7XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgb25Gb2N1cz17KCkgPT4gc2V0Rm9jdXNDbGFzcyh0cnVlKX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgaHRtbEZvcj17YGlucHV0XyR7Zm9ybUlkfV8ke2lkfV8ke2luZGV4fWB9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJoaWRlLWxhYmVsXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7aXRlbS5sYWJlbH1cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIHt2YWxpZGF0aW9uTWVzc2FnZSAmJlxuICAgICAgICAgIHRvdWNoZWQgJiZcbiAgICAgICAgICB2YWxpZGF0aW9uTWVzc2FnZVtpbmRleF0gJiZcbiAgICAgICAgICBpbmRleCA9PT0gdmFsaWRhdGlvbk1lc3NhZ2VbaW5kZXhdLmluZGV4ICYmXG4gICAgICAgICAgdmFsaWRhdGlvbk1lc3NhZ2VbaW5kZXhdLm1lc3NhZ2UgJiYgKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZXJyb3ItbWVzc2FnZVwiXG4gICAgICAgICAgICAgIGlkPXtgZXJyb3JfJHtmb3JtSWR9XyR7aXRlbS5pZH1gfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge3ZhbGlkYXRpb25NZXNzYWdlW2luZGV4XS5tZXNzYWdlfVxuICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtlcnJvciAmJiA8c3BhbiBjbGFzc05hbWU9XCJlcnJvci1tZXNzYWdlXCI+e2Vycm9yfTwvc3Bhbj59XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSl9XG4gICAgPC8+XG4gICk7XG59O1xuIl19
"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")),_objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties")),_react=_interopRequireWildcard(require("react"));function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2["default"])(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}var _default=function(a){var b=a.field,c=a.value,d=a.validationMessage,e=a.touched,f=a.setTouched,g=a.hideField,h=a.updateForm,i=a.styledComponents,j=a.error,k=a.unsetError,l=a.cssClass,m=a.setFocusClass,n=(0,_objectWithoutProperties2["default"])(a,["field","value","validationMessage","touched","setTouched","hideField","updateForm","styledComponents","error","unsetError","cssClass","setFocusClass"]),o=b.id,p=b.formId,q=b.type,r=b.label,s=b.placeholder,t=b.isRequired,u=b.maxLength,v=b.description,w=b.descriptionPlacement,x=b.labelPlacement,y=b.width,z=b.customName,A=b.emailConfirmEnabled,B=b.inputs,C=(0,_react.useState)(B),D=(0,_slicedToArray2["default"])(C,2),E=D[0],F=D[1],G=function(a,b){var c=_objectSpread({},E);c[b]&&(c[b].cssClass=a&&c&&0<!!c.length?"filled":"",F(c))},H=i||!1,I=H.Input,J=void 0===I?"input":I,K=H.Label,L=void 0===K?"label":K,M=H.Box,N=void 0===M?"div":M;return _react["default"].createElement(N,{width:y,className:d&&e||j?"form-field error ".concat(l):"form-field ".concat(l),style:{display:g?"none":void 0}},_react["default"].createElement("div",{className:q},_react["default"].createElement(L,{htmlFor:"input_".concat(p,"_").concat(o),className:"gf-label ".concat(x)},r,t?_react["default"].createElement("abbr",null,"*"):null),"above"===w&&v&&_react["default"].createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:v}}),A?_react["default"].createElement(_react["default"].Fragment,null,B&&B.length&&B.map(function(a,g){return _react["default"].createElement("span",{key:"input_".concat(p,"_").concat(a.id),className:"".concat(1<B.length?"ginput_".concat(0===g?"left":"right"):"medim"," ").concat(E[g].cssClass?E[g].cssClass:"")},_react["default"].createElement(L,{className:"gf-label ".concat(x),htmlFor:"input_".concat(p,"_").concat(a.id,"_").concat(g)},a.customLabel||a.label,t?_react["default"].createElement("abbr",null,"*"):null),_react["default"].createElement(J,{id:"input_".concat(p,"_").concat(a.id,"_").concat(g),name:z||"input_".concat(o).concat(1===g?"_".concat(g+1):""),type:q,value:c&&c[g]&&c[g].val?c[g].val:"",placeholder:a.placeholder?a.placeholder:s,required:t,autoComplete:"off",onChange:function onChange(a){b.subId=g,h(a,b),k(o)},onBlur:function onBlur(a){b.subId=g,h(a,b),f(o),G(c&&c[g]&&c[g].val&&""!==c[g].val,g)},onFocus:function onFocus(){return G(!0,g)},"aria-label":r,"aria-describedby":"error_".concat(p,"_").concat(a.id,"_").concat(g),"aria-invalid":!!d&&e}))})):_react["default"].createElement(_react["default"].Fragment,null,_react["default"].createElement(J,{id:"input_".concat(p,"_").concat(o),name:z||"input_".concat(o),type:q,value:c?c:"",placeholder:s,maxLength:u,required:t,onChange:function onChange(a){h(a,b),k(o)},onBlur:function onBlur(a){h(a,b),f(o),m(""!==c)},onFocus:function onFocus(){return m(!0)},"aria-label":r,"aria-describedby":"error_".concat(p,"_").concat(o),"aria-invalid":!!d&&e||!!j})),"above"!==w&&v&&_react["default"].createElement("div",{className:"description",dangerouslySetInnerHTML:{__html:v}}),(d&&e||j)&&_react["default"].createElement("span",{className:"error-message",id:"error_".concat(p,"_").concat(o)},d||j)))};exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GaWVsZHMvRW1haWwuanN4Il0sIm5hbWVzIjpbImZpZWxkIiwidmFsdWUiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInRvdWNoZWQiLCJzZXRUb3VjaGVkIiwiaGlkZUZpZWxkIiwidXBkYXRlRm9ybSIsInN0eWxlZENvbXBvbmVudHMiLCJlcnJvciIsInVuc2V0RXJyb3IiLCJjc3NDbGFzcyIsInNldEZvY3VzQ2xhc3MiLCJwcm9wcyIsImlkIiwiZm9ybUlkIiwidHlwZSIsImxhYmVsIiwicGxhY2Vob2xkZXIiLCJpc1JlcXVpcmVkIiwibWF4TGVuZ3RoIiwiZGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvblBsYWNlbWVudCIsImxhYmVsUGxhY2VtZW50Iiwid2lkdGgiLCJjdXN0b21OYW1lIiwiZW1haWxDb25maXJtRW5hYmxlZCIsImlucHV0cyIsImVtYWlscyIsInNldEVtYWlscyIsInNldEZvY3VzQ2xhc3NNdWx0aXBsZSIsImFjdGlvbiIsImkiLCJlbWFpbCIsImxlbmd0aCIsIklucHV0IiwiTGFiZWwiLCJCb3giLCJkaXNwbGF5IiwiX19odG1sIiwibWFwIiwiaW5wdXQiLCJjdXN0b21MYWJlbCIsInZhbCIsImV2ZW50Iiwic3ViSWQiXSwibWFwcGluZ3MiOiJvdENBRWUsV0FjVCxJQWJKQSxDQUFBQSxDQWFJLEdBYkpBLEtBYUksQ0FaSkMsQ0FZSSxHQVpKQSxLQVlJLENBWEpDLENBV0ksR0FYSkEsaUJBV0ksQ0FWSkMsQ0FVSSxHQVZKQSxPQVVJLENBVEpDLENBU0ksR0FUSkEsVUFTSSxDQVJKQyxDQVFJLEdBUkpBLFNBUUksQ0FQSkMsQ0FPSSxHQVBKQSxVQU9JLENBTkpDLENBTUksR0FOSkEsZ0JBTUksQ0FMSkMsQ0FLSSxHQUxKQSxLQUtJLENBSkpDLENBSUksR0FKSkEsVUFJSSxDQUhKQyxDQUdJLEdBSEpBLFFBR0ksQ0FGSkMsQ0FFSSxHQUZKQSxhQUVJLENBRERDLENBQ0Msc01BRUZDLENBRkUsQ0FnQkFiLENBaEJBLENBRUZh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QUFPLENBQUUseUJBQU1VLENBQUFBLENBQWEsSUFBbkIsQ0FqQlgsQ0FrQkUsYUFBWUssQ0FsQmQsQ0FtQkUsbUNBQTJCRixDQUEzQixhQUFxQ0QsQ0FBckMsQ0FuQkYsQ0FvQkUsZUFBZSxDQUFDLENBQUNYLENBQUYsRUFBdUJDLENBQXhCLEVBQW9DLENBQUMsQ0FBQ0ssQ0FwQnRELEVBREYsQ0ExRUosQ0FtRzRCLE9BQXpCLEdBQUFhLENBQW9CLEVBQWdCRCxDQUFwQyxFQUNDLHVDQUNFLFNBQVMsQ0FBQyxhQURaLENBRUUsdUJBQXVCLENBQUUsQ0FBRWtCLE1BQU0sQ0FBRWxCLENBQVYsQ0FGM0IsRUFwR0osQ0F5R0csQ0FBRWxCLENBQWlCLEVBQUlDLENBQXRCLEVBQWtDSyxDQUFuQyxHQUNDLHdDQUFNLFNBQVMsQ0FBQyxlQUFoQixDQUFnQyxFQUFFLGlCQUFXTSxDQUFYLGFBQXFCRCxDQUFyQixDQUFsQyxFQUNHWCxDQUFpQixFQUFJTSxDQUR4QixDQTFHSixDQVRGLENBMEhILEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgKHtcbiAgZmllbGQsXG4gIHZhbHVlLFxuICB2YWxpZGF0aW9uTWVzc2FnZSxcbiAgdG91Y2hlZCxcbiAgc2V0VG91Y2hlZCxcbiAgaGlkZUZpZWxkLFxuICB1cGRhdGVGb3JtLFxuICBzdHlsZWRDb21wb25lbnRzLFxuICBlcnJvcixcbiAgdW5zZXRFcnJvcixcbiAgY3NzQ2xhc3MsXG4gIHNldEZvY3VzQ2xhc3MsXG4gIC4uLnByb3BzXG59KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpZCxcbiAgICBmb3JtSWQsXG4gICAgdHlwZSxcbiAgICBsYWJlbCxcbiAgICBwbGFjZWhvbGRlcixcbiAgICBpc1JlcXVpcmVkLFxuICAgIG1heExlbmd0aCxcbiAgICBkZXNjcmlwdGlvbixcbiAgICBkZXNjcmlwdGlvblBsYWNlbWVudCxcbiAgICBsYWJlbFBsYWNlbWVudCxcbiAgICB3aWR0aCxcbiAgICBjdXN0b21OYW1lLFxuICAgIGVtYWlsQ29uZmlybUVuYWJsZWQsXG4gICAgaW5wdXRzLFxuICB9ID0gZmllbGQ7XG5cbiAgY29uc3QgW2VtYWlscywgc2V0RW1haWxzXSA9IHVzZVN0YXRlKGlucHV0cyk7XG5cbiAgY29uc3Qgc2V0Rm9jdXNDbGFzc011bHRpcGxlID0gKGFjdGlvbiwgaSkgPT4ge1xuICAgIGNvbnN0IGVtYWlsID0geyAuLi5lbWFpbHMgfTtcbiAgICBpZiAoIWVtYWlsW2ldKSByZXR1cm47XG4gICAgaWYgKGFjdGlvbiAmJiBlbWFpbCAmJiAhIWVtYWlsLmxlbmd0aCA+IDApIHtcbiAgICAgIGVtYWlsW2ldLmNzc0NsYXNzID0gXCJmaWxsZWRcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgZW1haWxbaV0uY3NzQ2xhc3MgPSBcIlwiO1xuICAgIH1cbiAgICBzZXRFbWFpbHMoZW1haWwpO1xuICB9O1xuXG4gIGNvbnN0IHtcbiAgICBJbnB1dCA9IFwiaW5wdXRcIixcbiAgICBMYWJlbCA9IFwibGFiZWxcIixcbiAgICBCb3ggPSBcImRpdlwiLFxuICB9ID0gc3R5bGVkQ29tcG9uZW50cyB8fCBmYWxzZTtcbiAgcmV0dXJuIChcbiAgICA8Qm94XG4gICAgICB3aWR0aD17d2lkdGh9XG4gICAgICBjbGFzc05hbWU9e1xuICAgICAgICAodmFsaWRhdGlvbk1lc3NhZ2UgJiYgdG91Y2hlZCkgfHwgZXJyb3JcbiAgICAgICAgICA/IGBmb3JtLWZpZWxkIGVycm9yICR7Y3NzQ2xhc3N9YFxuICAgICAgICAgIDogYGZvcm0tZmllbGQgJHtjc3NDbGFzc31gXG4gICAgICB9XG4gICAgICBzdHlsZT17eyBkaXNwbGF5OiBoaWRlRmllbGQgPyBcIm5vbmVcIiA6IHVuZGVmaW5lZCB9fVxuICAgID5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXt0eXBlfT5cbiAgICAgICAgPExhYmVsXG4gICAgICAgICAgaHRtbEZvcj17YGlucHV0XyR7Zm9ybUlkfV8ke2lkfWB9XG4gICAgICAgICAgY2xhc3NOYW1lPXtgZ2YtbGFiZWwgJHtsYWJlbFBsYWNlbWVudH1gfVxuICAgICAgICA+XG4gICAgICAgICAge2xhYmVsfVxuICAgICAgICAgIHtpc1JlcXVpcmVkID8gPGFiYnI+KjwvYWJicj4gOiBudWxsfVxuICAgICAgICA8L0xhYmVsPlxuICAgICAgICB7ZGVzY3JpcHRpb25QbGFjZW1lbnQgPT09IFwiYWJvdmVcIiAmJiBkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBkZXNjcmlwdGlvbiB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIHtlbWFpbENvbmZpcm1FbmFibGVkID8gKFxuICAgICAgICAgIDw+XG4gICAgICAgICAgICB7aW5wdXRzICYmXG4gICAgICAgICAgICAgIGlucHV0cy5sZW5ndGggJiZcbiAgICAgICAgICAgICAgaW5wdXRzLm1hcCgoaW5wdXQsIGkpID0+IChcbiAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAga2V5PXtgaW5wdXRfJHtmb3JtSWR9XyR7aW5wdXQuaWR9YH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YCR7XG4gICAgICAgICAgICAgICAgICAgIGlucHV0cy5sZW5ndGggPiAxXG4gICAgICAgICAgICAgICAgICAgICAgPyBgZ2lucHV0XyR7aSA9PT0gMCA/IFwibGVmdFwiIDogXCJyaWdodFwifWBcbiAgICAgICAgICAgICAgICAgICAgICA6IFwibWVkaW1cIlxuICAgICAgICAgICAgICAgICAgfSAke2VtYWlsc1tpXS5jc3NDbGFzcyA/IGVtYWlsc1tpXS5jc3NDbGFzcyA6IFwiXCJ9YH1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICA8TGFiZWxcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgZ2YtbGFiZWwgJHtsYWJlbFBsYWNlbWVudH1gfVxuICAgICAgICAgICAgICAgICAgICBodG1sRm9yPXtgaW5wdXRfJHtmb3JtSWR9XyR7aW5wdXQuaWR9XyR7aX1gfVxuICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7aW5wdXQuY3VzdG9tTGFiZWwgfHwgaW5wdXQubGFiZWx9XG4gICAgICAgICAgICAgICAgICAgIHtpc1JlcXVpcmVkID8gPGFiYnI+KjwvYWJicj4gOiBudWxsfVxuICAgICAgICAgICAgICAgICAgPC9MYWJlbD5cbiAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICBpZD17YGlucHV0XyR7Zm9ybUlkfV8ke2lucHV0LmlkfV8ke2l9YH1cbiAgICAgICAgICAgICAgICAgICAgbmFtZT17XG4gICAgICAgICAgICAgICAgICAgICAgY3VzdG9tTmFtZSB8fCBgaW5wdXRfJHtpZH0ke2kgPT09IDEgPyBgXyR7aSArIDF9YCA6IFwiXCJ9YFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtcbiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSAmJiB2YWx1ZVtpXSAmJiB2YWx1ZVtpXS52YWwgPyB2YWx1ZVtpXS52YWwgOiBcIlwiXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e1xuICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnBsYWNlaG9sZGVyID8gaW5wdXQucGxhY2Vob2xkZXIgOiBwbGFjZWhvbGRlclxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkPXtpc1JlcXVpcmVkfVxuICAgICAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnN1YklkID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGb3JtKGV2ZW50LCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgdW5zZXRFcnJvcihpZCk7XG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgIG9uQmx1cj17ZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnN1YklkID0gaTtcbiAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVGb3JtKGV2ZW50LCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgICAgICAgc2V0VG91Y2hlZChpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgc2V0Rm9jdXNDbGFzc011bHRpcGxlKFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVbaV0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVbaV0udmFsICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW2ldLnZhbCAhPT0gXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGlcbiAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICBvbkZvY3VzPXsoKSA9PiBzZXRGb2N1c0NsYXNzTXVsdGlwbGUodHJ1ZSwgaSl9XG4gICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PXtgZXJyb3JfJHtmb3JtSWR9XyR7aW5wdXQuaWR9XyR7aX1gfVxuICAgICAgICAgICAgICAgICAgICBhcmlhLWludmFsaWQ9eyEhdmFsaWRhdGlvbk1lc3NhZ2UgJiYgdG91Y2hlZH1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgIGlkPXtgaW5wdXRfJHtmb3JtSWR9XyR7aWR9YH1cbiAgICAgICAgICAgICAgbmFtZT17Y3VzdG9tTmFtZSB8fCBgaW5wdXRfJHtpZH1gfVxuICAgICAgICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICAgICAgICB2YWx1ZT17IXZhbHVlID8gXCJcIiA6IHZhbHVlfVxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgICAgICAgIG1heExlbmd0aD17bWF4TGVuZ3RofVxuICAgICAgICAgICAgICByZXF1aXJlZD17aXNSZXF1aXJlZH1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e2V2ZW50ID0+IHtcbiAgICAgICAgICAgICAgICB1cGRhdGVGb3JtKGV2ZW50LCBmaWVsZCk7XG4gICAgICAgICAgICAgICAgdW5zZXRFcnJvcihpZCk7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIG9uQmx1cj17ZXZlbnQgPT4ge1xuICAgICAgICAgICAgICAgIHVwZGF0ZUZvcm0oZXZlbnQsIGZpZWxkKTtcbiAgICAgICAgICAgICAgICBzZXRUb3VjaGVkKGlkKTtcbiAgICAgICAgICAgICAgICBzZXRGb2N1c0NsYXNzKHZhbHVlICE9PSBcIlwiKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgb25Gb2N1cz17KCkgPT4gc2V0Rm9jdXNDbGFzcyh0cnVlKX1cbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD17bGFiZWx9XG4gICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9e2BlcnJvcl8ke2Zvcm1JZH1fJHtpZH1gfVxuICAgICAgICAgICAgICBhcmlhLWludmFsaWQ9eyghIXZhbGlkYXRpb25NZXNzYWdlICYmIHRvdWNoZWQpIHx8ICEhZXJyb3J9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvPlxuICAgICAgICApfVxuICAgICAgICB7ZGVzY3JpcHRpb25QbGFjZW1lbnQgIT09IFwiYWJvdmVcIiAmJiBkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBkZXNjcmlwdGlvbiB9fVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIHsoKHZhbGlkYXRpb25NZXNzYWdlICYmIHRvdWNoZWQpIHx8IGVycm9yKSAmJiAoXG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZXJyb3ItbWVzc2FnZVwiIGlkPXtgZXJyb3JfJHtmb3JtSWR9XyR7aWR9YH0+XG4gICAgICAgICAgICB7dmFsaWRhdGlvbk1lc3NhZ2UgfHwgZXJyb3J9XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuIl19